version: 2.1

orbs:
  win: circleci/windows@2.4.0

defaults: &defaults
  parameters:
    node_version:
      type: string
      default: ""

commands:
  # Platform-agnostic commands
  npmrc:
    steps:
      - run:
          name: Create .npmrc
          command: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" >> .npmrc
  install_node_npm:
    description: Install correct Node version
    parameters:
      node_version:
        type: string
        default: ""
    steps:
      - run:
          name: Install correct version of Node
          command: nvm install << parameters.node_version >>
      - run:
          name: Use correct version of Node
          command: nvm use << parameters.node_version >>
  install_deps:
    description: Install dependencies
    steps:
      - run:
          name: Install dependencies
          command: npm install
  show_node_version:
    description: Log Node and npm version
    steps:
      - run:
          name: Node version
          command: node --version
      - run:
          name: NPM version
          command: npm --version
  show_xcode_version:
    description: Prints XCode version
    steps:
      - run:
          name: Show XCode version
          command: /usr/bin/xcodebuild -version
  print_os:
    description: Prints current OS name
    steps:
      - run:
          name: Show current OS name
          command: uname -a

jobs:
  lint:
    <<: *defaults
    docker:
      - image: circleci/node:<< parameters.node_version >>
    steps:
      - checkout
      - install_deps
      - show_node_version
      - run:
          name: Run lint
          command: npm run lint

  test-linux:
    <<: *defaults
    docker:
      - image: cimg/node:<<parameters.node_version>>
    steps:
      - run: git config --global core.autocrlf false
      - checkout
      - print_os
      - show_node_version
      - install_deps
      - run:
          name: Run tests
          command: npm test

  test-macos:
    <<: *defaults
    macos:
      xcode: 11.3.0
    steps:
      - run: git config --global core.autocrlf false
      - checkout
      - print_os
      - show_node_version
      - show_xcode_version
      - install_deps
      - run:
          name: Run tests
          command: npm test

  test-windows:
    <<: *defaults
    executor:
      name: win/default
    steps:
      - run: git config --global core.autocrlf false
      - checkout
      - print_os
      - install_node_npm:
          node_version: << parameters.node_version >>
      - show_node_version
      - install_deps
      - run:
          name: Run tests
          command: npm test

  release:
    <<: *defaults
    resource_class: small
    docker:
      - image: cimg/node:10
    steps:
      - checkout
      - npmrc
      - install_deps
      - show_node_version
      - run:
          name: Release
          command: npx semantic-release

workflows:
  test_and_release:
    jobs:
      - lint:
          name: Lint
          context: nodejs-install
          node_version: "14"
          filters:
            branches:
              ignore:
                - master
      # Linux tests
      - test-linux:
          name: Linux Tests for Node << matrix.node_version >>
          requires:
            - Lint
          matrix:
            parameters:
              node_version: ["8.17", "10.22", "12.18", "14.8"]
          filters:
            branches:
              ignore:
                - master
      # MacOS tests
      - test-macos:
          name: MacOS Tests for Node << matrix.node_version >>
          requires:
            - Lint
          matrix:
            parameters:
              node_version: ["8.17.0", "10.22.0", "12.18.3", "14.8.0"]
          filters:
            branches:
              ignore:
                - master
      # Windows tests
      - test-windows:
          name: Windows Tests for Node << matrix.node_version >>
          context: nodejs-install
          requires:
            - Lint
          matrix:
            parameters:
              node_version: ["8.17.0", "10.22.0", "12.18.3", "14.8.0"]
          filters:
            branches:
              ignore:
                - master

      # Release
      - release:
          name: Release
          context: nodejs-lib-release
          requires:
            - Lint
          filters:
            branches:
              only:
                - master
